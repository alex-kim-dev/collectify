generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String    @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Account {
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? @map("refreshToken")
    access_token             String? @map("accessToken")
    expires_at               Int?    @map("expiresAt")
    refresh_token_expires_in Int?    @map("refreshTokenExpiresIn")
    token_type               String? @map("tokenType")
    scope                    String?
    id_token                 String? @map("idToken")
    session_state            String? @map("sessionState")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([provider, providerAccountId])
}

model Session {
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model VerificationToken {
    identifier String
    token      String
    expires    DateTime

    @@id([identifier, token])
}
